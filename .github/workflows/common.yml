name: 'Common - Build and Publish'

on:
  push:
    branches: ['**']
    paths: ['.github/workflows/common.yml', 'common/**']

jobs:
  box:
    name: 'Humbug Box'
    runs-on: ubuntu-latest

    steps:
      - name: 'Prepare the build context'
        uses: actions/checkout@v1

      - name: 'Build & Publish the Docker image'
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ajardin/humbug-box
          path: common/humbug-box
          always_pull: true
          tags: latest
          push: ${{ github.ref == 'refs/heads/master' }}

  phpcpd:
    name: 'PHP Copy/Paste Detector'
    runs-on: ubuntu-latest

    steps:
      - name: 'Prepare the build context'
        uses: actions/checkout@v1

      - name: 'Build & Publish the Docker image'
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ajardin/phpcpd
          path: common/phpcpd/
          always_pull: true
          tags: latest
          push: ${{ github.ref == 'refs/heads/master' }}

  phpcsfixer:
    name: 'PHP-CS-Fixer'
    runs-on: ubuntu-latest

    steps:
      - name: 'Prepare the build context'
        uses: actions/checkout@v1

      - name: 'Build & Publish the Docker image'
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ajardin/phpcsfixer
          path: common/phpcsfixer/
          always_pull: true
          tags: latest
          push: ${{ github.ref == 'refs/heads/master' }}

  phpstan:
    name: 'PHPStan'
    runs-on: ubuntu-latest

    steps:
      - name: 'Prepare the build context'
        uses: actions/checkout@v1

      - name: 'Build & Publish the Docker image'
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ajardin/phpstan
          path: common/phpstan/
          always_pull: true
          tags: latest
          push: ${{ github.ref == 'refs/heads/master' }}

  security-checker:
    name: 'Security Checker'
    runs-on: ubuntu-latest

    steps:
      - name: 'Prepare the build context'
        uses: actions/checkout@v1

      - name: 'Build & Publish the Docker image'
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ajardin/security-checker
          path: common/security-checker/
          always_pull: true
          tags: latest
          push: ${{ github.ref == 'refs/heads/master' }}

  synchro:
    name: 'Synchronization'
    runs-on: ubuntu-latest

    steps:
      - name: 'Prepare the build context'
        uses: actions/checkout@v1

      - name: 'Build & Publish the Docker image'
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ajardin/synchro
          path: common/synchro/
          always_pull: true
          tags: latest
          push: ${{ github.ref == 'refs/heads/master' }}

  yarn:
    name: 'Yarn'
    runs-on: ubuntu-latest

    steps:
      - name: 'Prepare the build context'
        uses: actions/checkout@v1

      - name: 'Build & Publish the Docker image'
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ajardin/yarn
          path: common/yarn/
          always_pull: true
          tags: latest
          push: ${{ github.ref == 'refs/heads/master' }}
